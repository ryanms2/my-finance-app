/**
 * M√≥dulo para envio de notifica√ß√µes via Server-Sent Events (SSE)
 */

import { sseConnections } from './sse-manager'

// Fun√ß√£o para enviar notifica√ß√£o via SSE
export function sendSSENotification(userId: string, notification: any): boolean {
  try {
    console.log(`üîÑ [DEBUG] Tentando enviar notifica√ß√£o SSE para usu√°rio: ${userId}`)
    
    const connection = sseConnections.get(userId)
    
    if (!connection) {
      console.warn(`‚ö†Ô∏è [DEBUG] Conex√£o SSE n√£o encontrada para usu√°rio: ${userId}`)
      console.log(`üìã [DEBUG] Conex√µes ativas dispon√≠veis:`, Array.from(sseConnections.keys()))
      return false
    }

    const data = JSON.stringify({
      type: 'notification',
      data: notification,
      timestamp: Date.now()
    })
    
    connection.write(`data: ${data}\n\n`).then(() => {
      console.log(`‚úÖ [DEBUG] Notifica√ß√£o SSE enviada com sucesso para usu√°rio: ${userId}`)
    }).catch((error) => {
      console.error(`‚ùå [DEBUG] Erro ao enviar notifica√ß√£o SSE:`, error)
      sseConnections.delete(userId)
    })
    
    return true
  } catch (error) {
    console.error(`‚ùå [DEBUG] Erro geral ao enviar notifica√ß√£o SSE:`, error)
    return false
  }
}
